using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using DevExpress.XtraGrid;
using DevExpress.XtraEditors;
using DevExpress.XtraEditors.Repository;
using DevExpress.XtraGrid.Columns;
using CustomControlInGrid;

namespace Genesis_Code_Project
{
    public partial class frmOrder_Screen : Form
    {
        public frmOrder_Screen()
        {
            try
            {
                InitializeComponent();
                
                //Create the unbound column, this will join the First Name and Last Name columns into the user control.
                //Not the cleanest way but fulfils the purpose to get this working.
                GridColumn unboundCustomerName = new GridColumn() { Caption = "Customers Name", UnboundType = DevExpress.Data.UnboundColumnType.Object };
                unboundCustomerName.FieldName = "CustomersName";
                unboundCustomerName.Visible = true;
                unboundCustomerName.VisibleIndex = 2;
                unboundCustomerName.Width = 250;
                grdOrdersView.Columns.Add(unboundCustomerName);

                CustomRepositoryItem repository = new CustomRepositoryItem();
                repository.ControlType = typeof(MyUserControl);
                unboundCustomerName.ColumnEdit = repository;
                // This line of code is generated by Data Source Configuration Wizard
                grdOrders.DataSource = new OrderModel.OrderEntities().Orders;

                this.btnViewCustomer.Click += new System.EventHandler(this.ViewCustomerButton_Click);
                grdOrdersView.CustomUnboundColumnData += new DevExpress.XtraGrid.Views.Base.CustomColumnDataEventHandler(grdOrdersView_CustomUnboundColumnData);

            }
            catch (Exception ex)
            {

                string message = ex.Message + "\n   ::::::::::::: \n" + ex.StackTrace;
                MessageBox.Show(message, "Genesis - frmOrder_Screen ", MessageBoxButtons.OK, MessageBoxIcon.Exclamation);
            }	            
        }

        void grdOrdersView_CustomUnboundColumnData(object sender, DevExpress.XtraGrid.Views.Base.CustomColumnDataEventArgs e)
        {
            try
            {
                if (e.IsGetData)
                {
                    //Aidan Gill April 2019
                    //This will update each row in the grid with the First and Last Name into one column in the user control
                    OrderModel.Order selectedorder = (e.Row as OrderModel.Order);
                    Tuple<string> t = new Tuple<string>(selectedorder.Customer.FirstName + " " + selectedorder.Customer.LastName);
                    e.Value = t;
                }
            }
            catch (Exception ex)
            {

                string message = ex.Message + "\n   ::::::::::::: \n" + ex.StackTrace;
                MessageBox.Show(message, "Genesis - grdOrdersView_CustomUnboundColumnData ", MessageBoxButtons.OK, MessageBoxIcon.Exclamation);
            }
        }

        private void ViewCustomerButton_Click(object sender, EventArgs e)
            {
                try
                {
                    int iRowCount = grdOrdersView.GetFocusedDataSourceRowIndex();
                    OrderModel.Order selectedorder = (grdOrdersView.GetRow(iRowCount) as OrderModel.Order);

                    using (frmView_Customer_Screen frmCustomer = new frmView_Customer_Screen(selectedorder, ref this.grdOrders))
                    {
                        frmCustomer.ShowDialog();
                    }
                }
                catch (Exception ex)
                {

                    string message = ex.Message + "\n   ::::::::::::: \n" + ex.StackTrace;
                    MessageBox.Show(message, "Genesis - ViewCustomerButton_Click ", MessageBoxButtons.OK, MessageBoxIcon.Exclamation);
                }	
            }
    }
}
