//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Entity Framework EntityObject template.
// Code is generated on: 27/04/2019 23:03:18
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Collections.Generic;
using System.Data;
using System.Data.Common;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;
using System.Reflection;
using System.Linq.Expressions;
using System.Data.EntityClient;
using System.Data.Metadata.Edm;
using System.Data.Objects;
using System.Data.Objects.DataClasses;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("OrderMod", "FK_Order_Customer", "Customer", RelationshipMultiplicity.One, typeof(OrderMod.Customer), "Orders", RelationshipMultiplicity.Many, typeof(OrderMod.Order), true)]

#endregion

namespace OrderMod
{

    #region OrderEnt

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class OrderEnt : ObjectContext
    {
        #region Constructors

        /// <summary>
        /// Initialize a new OrderEnt object.
        /// </summary>
        public OrderEnt() : 
                base(@"metadata=res://*/DMEntity.csdl|res://*/DMEntity.ssdl|res://*/DMEntity.msl;provider=System.Data.SqlClient;provider connection string=""Data Source=AGILL-LENEVO-PC\SQLEXPRESS;Initial Catalog=Orders;Integrated Security=True;Persist Security Info=True""", "OrderEnt")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }

        /// <summary>
        /// Initializes a new OrderEnt object using the connection string found in the 'OrderEnt' section of the application configuration file.
        /// </summary>
        public OrderEnt(string connectionString) : 
                base(connectionString, "OrderEnt")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }

        /// <summary>
        /// Initialize a new OrderEnt object.
        /// </summary>
        public OrderEnt(EntityConnection connection) : base(connection, "OrderEnt")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }

        #endregion

        #region Partial Methods

        partial void OnContextCreated();

        #endregion

        #region ObjectSet Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Customer> Customers
        {
            get
            {
                if ((_Customers == null))
                {
                    _Customers = base.CreateObjectSet<Customer>("Customers");
                }
                return _Customers;
            }
        }
        private ObjectSet<Customer> _Customers;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Order> Orders
        {
            get
            {
                if ((_Orders == null))
                {
                    _Orders = base.CreateObjectSet<Order>("Orders");
                }
                return _Orders;
            }
        }
        private ObjectSet<Order> _Orders;

        #endregion
        #region AddTo Methods

        /// <summary>
        /// Deprecated Method for adding a new object to the Customers EntitySet.
        /// </summary>
        public void AddToCustomers(Customer customer)
        {
            base.AddObject("Customers", customer);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the Orders EntitySet.
        /// </summary>
        public void AddToOrders(Order order)
        {
            base.AddObject("Orders", order);
        }

        #endregion
    }

    #endregion
}

namespace OrderMod
{

    /// <summary>
    /// There are no comments for OrderMod.Customer in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="OrderMod", Name="Customer")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Customer : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new Customer object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="firstName">Initial value of FirstName.</param>
        /// <param name="lastName">Initial value of LastName.</param>
        public static Customer CreateCustomer(global::System.Guid id, string firstName, string lastName)
        {
            Customer customer = new Customer();
            customer.Id = id;
            customer.FirstName = firstName;
            customer.LastName = lastName;
            return customer;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual global::System.Guid Id
        {
            get
            {
                global::System.Guid value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private global::System.Guid _Id;
        partial void OnGetId(ref global::System.Guid value);
        partial void OnIdChanging(ref global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for FirstName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string FirstName
        {
            get
            {
                string value = _FirstName;
                OnGetFirstName(ref value);
                return value;
            }
            set
            {
                if (_FirstName != value)
                {
                  OnFirstNameChanging(ref value);
                  ReportPropertyChanging("FirstName");
                  _FirstName = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("FirstName");
                  OnFirstNameChanged();
              }
            }
        }
        private string _FirstName;
        partial void OnGetFirstName(ref string value);
        partial void OnFirstNameChanging(ref string value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// There are no comments for LastName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string LastName
        {
            get
            {
                string value = _LastName;
                OnGetLastName(ref value);
                return value;
            }
            set
            {
                if (_LastName != value)
                {
                  OnLastNameChanging(ref value);
                  ReportPropertyChanging("LastName");
                  _LastName = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("LastName");
                  OnLastNameChanged();
              }
            }
        }
        private string _LastName;
        partial void OnGetLastName(ref string value);
        partial void OnLastNameChanging(ref string value);
        partial void OnLastNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for Orders in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OrderMod", "FK_Order_Customer", "Orders")]
        public virtual EntityCollection<Order> Orders
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<Order>("OrderMod.FK_Order_Customer", "Orders");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<Order>("OrderMod.FK_Order_Customer", "Orders", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for OrderMod.Order in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="OrderMod", Name="Order")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Order : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new Order object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="customerId">Initial value of CustomerId.</param>
        /// <param name="referenceNumber">Initial value of ReferenceNumber.</param>
        /// <param name="orderValue">Initial value of OrderValue.</param>
        /// <param name="orderDate">Initial value of OrderDate.</param>
        public static Order CreateOrder(global::System.Guid id, global::System.Guid customerId, string referenceNumber, decimal orderValue, global::System.DateTime orderDate)
        {
            Order order = new Order();
            order.Id = id;
            order.CustomerId = customerId;
            order.ReferenceNumber = referenceNumber;
            order.OrderValue = orderValue;
            order.OrderDate = orderDate;
            return order;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual global::System.Guid Id
        {
            get
            {
                global::System.Guid value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private global::System.Guid _Id;
        partial void OnGetId(ref global::System.Guid value);
        partial void OnIdChanging(ref global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for CustomerId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual global::System.Guid CustomerId
        {
            get
            {
                global::System.Guid value = _CustomerId;
                OnGetCustomerId(ref value);
                return value;
            }
            set
            {
                if (_CustomerId != value)
                {
                  OnCustomerIdChanging(ref value);
                  ReportPropertyChanging("CustomerId");
                  _CustomerId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CustomerId");
                  OnCustomerIdChanged();
              }
            }
        }
        private global::System.Guid _CustomerId;
        partial void OnGetCustomerId(ref global::System.Guid value);
        partial void OnCustomerIdChanging(ref global::System.Guid value);
        partial void OnCustomerIdChanged();
    
        /// <summary>
        /// There are no comments for ReferenceNumber in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string ReferenceNumber
        {
            get
            {
                string value = _ReferenceNumber;
                OnGetReferenceNumber(ref value);
                return value;
            }
            set
            {
                if (_ReferenceNumber != value)
                {
                  OnReferenceNumberChanging(ref value);
                  ReportPropertyChanging("ReferenceNumber");
                  _ReferenceNumber = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("ReferenceNumber");
                  OnReferenceNumberChanged();
              }
            }
        }
        private string _ReferenceNumber;
        partial void OnGetReferenceNumber(ref string value);
        partial void OnReferenceNumberChanging(ref string value);
        partial void OnReferenceNumberChanged();
    
        /// <summary>
        /// There are no comments for OrderValue in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal OrderValue
        {
            get
            {
                decimal value = _OrderValue;
                OnGetOrderValue(ref value);
                return value;
            }
            set
            {
                if (_OrderValue != value)
                {
                  OnOrderValueChanging(ref value);
                  ReportPropertyChanging("OrderValue");
                  _OrderValue = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("OrderValue");
                  OnOrderValueChanged();
              }
            }
        }
        private decimal _OrderValue;
        partial void OnGetOrderValue(ref decimal value);
        partial void OnOrderValueChanging(ref decimal value);
        partial void OnOrderValueChanged();
    
        /// <summary>
        /// There are no comments for OrderDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual global::System.DateTime OrderDate
        {
            get
            {
                global::System.DateTime value = _OrderDate;
                OnGetOrderDate(ref value);
                return value;
            }
            set
            {
                if (_OrderDate != value)
                {
                  OnOrderDateChanging(ref value);
                  ReportPropertyChanging("OrderDate");
                  _OrderDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("OrderDate");
                  OnOrderDateChanged();
              }
            }
        }
        private global::System.DateTime _OrderDate;
        partial void OnGetOrderDate(ref global::System.DateTime value);
        partial void OnOrderDateChanging(ref global::System.DateTime value);
        partial void OnOrderDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for Customer in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OrderMod", "FK_Order_Customer", "Customer")]
        public virtual Customer Customer
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Customer>("OrderMod.FK_Order_Customer", "Customer").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Customer>("OrderMod.FK_Order_Customer", "Customer").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for Customer in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Customer> CustomerReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Customer>("OrderMod.FK_Order_Customer", "Customer");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<Customer>("OrderMod.FK_Order_Customer", "Customer", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Customer>("OrderMod.FK_Order_Customer", "Customer").Value = null;
                }
            }
        }

        #endregion
    }

}
